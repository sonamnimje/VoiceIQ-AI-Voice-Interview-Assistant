name: Deploy Frontend to Vercel

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install and build frontend
        working-directory: frontend
        run: |
          npm ci
          npm run build
        env:
          # Build-time envs for create-react-app. Set these here or in Vercel if you prefer.
          REACT_APP_BACKEND_URL: https://voiceiq-backend.onrender.com
          REACT_APP_SOCKET_URL: https://voiceiq-backend.onrender.com

      - name: Install Vercel CLI
        run: npm i -g vercel

      - name: Deploy to Vercel (use vercel.json at repo root)
        run: vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --confirm

      - name: Deployment notice
        run: echo "If the workflow succeeded, the frontend was deployed to Vercel."

      - name: Smoke test deployed site
        run: |
          # Known production preview domain; change if your Vercel project uses a different URL
          VERCEL_URL="https://voiceiq-eta.vercel.app"
          echo "Checking $VERCEL_URL/api/health for backend response..."
          for i in {1..12}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" "$VERCEL_URL/api/health" || echo "000")
            if [ "$status" = "200" ]; then
              body=$(curl -s "$VERCEL_URL/api/health")
              echo "Response body: $body"
              echo "$body" | grep -q '{"status":"ok"}' && echo "Smoke test passed" && exit 0 || echo "Health response mismatch"
            fi
            echo "Attempt $i: status=$status - waiting 5s"
            sleep 5
          done
          echo "Smoke test failed: /api/health did not return expected response" >&2
          exit 1
